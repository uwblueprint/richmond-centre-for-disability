type Query {
  meta: Meta!
  applicants: [Applicant!]
  employees: [Employee!]
  physicians: [Physician!]
  applications: [Application!]
  permits: [Permit!]
  applicant(id: ID!): Applicant
}

type Mutation {
  createApplicant(input: CreateApplicantInput!): CreateApplicantResult!
  createEmployee(input: CreateEmployeeInput!): CreateEmployeeResult!
  createPhysician(input: CreatePhysicianInput!): CreatePhysicianResult!
  createApplication(input: CreateApplicationInput!): CreateApplicationResult!
  createPermit(input: CreatePermitInput!): CreatePermitResult!
}

scalar Date

enum Role {
  ADMIN
  ACCOUNTING
  SECRETARY
}

enum Province {
  BC
  AB
  SK
  MB
  ON
  QC
  NS
  PE
  NL
  NB
  NU
  NT
  YT
}

enum PaymentType {
  MASTERCARD
  VISA
  ETRANSFER
  CASH
  CHEQUE
  DEBIT
  MONEY_ORDER
}

enum ApplicantStatus {
  ACTIVE
  INACTIVE
  DECEASED
}

enum Aid {
  CANE
  ELECTRIC_CHAIR
  MANUAL_CHAIR
  SCOOTER
  WALKER
}

enum PhysicianStatus {
  DECEASED
  CANCELLED
  RETIRED
  ACTIVE
  RESIGNED
  TEMPORARILY_INACTIVE
  RELOCATED
}

enum Gender {
  MALE
  FEMALE
  OTHER
}
