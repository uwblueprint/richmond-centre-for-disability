/* eslint-disable no-console */
// Relative paths required, path aliases throw error with seed command
import prisma from '../index'; // Prisma client
import { UpsertApplication } from '../types'; // Seeding types
import { Prisma } from '@prisma/client';

// Seed data
const applications: Array<UpsertApplication> = [
  {
    // New application
    type: 'NEW',
    id: 1,
    applicantId: null,
    firstName: 'New',
    middleName: null,
    lastName: 'Applicant',
    phone: '1234567890',
    email: 'applicantone@gmail.com',
    receiveEmailUpdates: true,
    addressLine1: '456 Vancouver Rd.',
    addressLine2: null,
    city: 'Vancouver',
    postalCode: 'A1B2C3',
    permitType: 'PERMANENT',
    paymentMethod: 'CASH',
    processingFee: new Prisma.Decimal(26),
    donationAmount: new Prisma.Decimal(0),
    shippingAddressSameAsHomeAddress: false,
    shippingFullName: 'Applicant One',
    shippingAddressLine1: '456 Vancouver Rd.',
    shippingAddressLine2: null,
    shippingCity: 'Vancouver',
    shippingProvince: 'BC',
    shippingCountry: 'Canada',
    shippingPostalCode: 'A1B2C3',
    billingAddressSameAsHomeAddress: true,
    billingFullName: null,
    billingAddressLine1: null,
    billingAddressLine2: null,
    billingCity: null,
    billingProvince: null,
    billingCountry: null,
    billingPostalCode: null,
    newApplication: {
      dateOfBirth: new Date('2000-01-01'),
      gender: 'MALE',
      disability: 'Cannot walk',
      disabilityCertificationDate: new Date(),
      patientCondition: 'AFFECTS_MOBILITY',
      mobilityAids: [],
      otherPatientCondition: null,
      physicianFirstName: 'Doctor',
      physicianLastName: 'Physician 2',
      physicianMspNumber: '12345',
      physicianAddressLine1: '789 BC Ave.',
      physicianAddressLine2: null,
      physicianCity: 'Victoria',
      physicianPostalCode: 'B4N5M6',
      physicianPhone: '1324354657',
      guardianFirstName: 'Guardian',
      guardianMiddleName: null,
      guardianLastName: 'One',
      guardianAddressLine1: '123 Dino Rd.',
      guardianAddressLine2: '10',
      guardianCity: 'Markham',
      guardianPostalCode: 'Y1U0I4',
      guardianPhone: '1084729384',
      guardianRelationship: 'Father',
      usesAccessibleConvertedVan: false,
      accessibleConvertedVanLoadingMethod: null,
      requiresWiderParkingSpace: false,
      requiresWiderParkingSpaceReason: null,
      otherRequiresWiderParkingSpaceReason: null,
      temporaryPermitExpiry: null,
    },
    renewalApplication: undefined,
    replacementApplication: undefined,
    paidThroughShopify: false,
    shopifyConfirmationNumber: null,
    shopifyPaymentStatus: null,
    shopifyOrderNumber: null,
  },
  {
    // Renewal application
    type: 'RENEWAL',
    id: 2,
    applicantId: 2,
    firstName: 'Applicant',
    middleName: 'Middle2',
    lastName: 'Two',
    phone: '0987654321',
    email: 'applicanttwo@gmail.com',
    receiveEmailUpdates: false,
    addressLine1: '789 Vancouver Rd.',
    addressLine2: '264C',
    city: 'Vancouver',
    postalCode: 'B1C2D3',
    permitType: 'PERMANENT',
    paymentMethod: 'CHEQUE',
    processingFee: new Prisma.Decimal(26),
    donationAmount: new Prisma.Decimal(10),
    shippingAddressSameAsHomeAddress: true,
    shippingFullName: null,
    shippingAddressLine1: null,
    shippingAddressLine2: null,
    shippingCity: null,
    shippingProvince: null,
    shippingCountry: null,
    shippingPostalCode: null,
    billingAddressSameAsHomeAddress: true,
    billingFullName: null,
    billingAddressLine1: null,
    billingAddressLine2: null,
    billingCity: null,
    billingProvince: null,
    billingCountry: null,
    billingPostalCode: null,
    newApplication: undefined,
    renewalApplication: {
      physicianFirstName: 'Doctor',
      physicianLastName: 'Physician2',
      physicianMspNumber: '67890',
      physicianAddressLine1: '789 Alberta Rd.',
      physicianAddressLine2: null,
      physicianCity: 'Calgary',
      physicianPostalCode: 'H4K3S0',
      physicianPhone: '8264029163',
      usesAccessibleConvertedVan: true,
      accessibleConvertedVanLoadingMethod: 'END_LOADING',
      requiresWiderParkingSpace: false,
      requiresWiderParkingSpaceReason: null,
      otherRequiresWiderParkingSpaceReason: null,
    },
    replacementApplication: undefined,
    paidThroughShopify: false,
    shopifyConfirmationNumber: null,
    shopifyPaymentStatus: null,
    shopifyOrderNumber: null,
  },
  {
    // Replacement application
    type: 'REPLACEMENT',
    id: 3,
    applicantId: 3,
    firstName: 'Applicant',
    middleName: null,
    lastName: 'Three',
    phone: '0987654321',
    email: 'applicantthree@gmail.com',
    receiveEmailUpdates: false,
    addressLine1: '789 Vancouver Rd.',
    addressLine2: null,
    city: 'Vancouver',
    postalCode: 'B1C2D3',
    permitType: 'PERMANENT',
    paymentMethod: 'CHEQUE',
    processingFee: new Prisma.Decimal(26),
    donationAmount: new Prisma.Decimal(100),
    shippingAddressSameAsHomeAddress: true,
    shippingFullName: null,
    shippingAddressLine1: null,
    shippingAddressLine2: null,
    shippingCity: null,
    shippingProvince: null,
    shippingCountry: null,
    shippingPostalCode: null,
    billingAddressSameAsHomeAddress: true,
    billingFullName: null,
    billingAddressLine1: null,
    billingAddressLine2: null,
    billingCity: null,
    billingProvince: null,
    billingCountry: null,
    billingPostalCode: null,
    newApplication: undefined,
    renewalApplication: undefined,
    replacementApplication: {
      reason: 'LOST',
      lostTimestamp: new Date('2020-01-03'),
      lostLocation: 'DC Library',
      stolenPoliceFileNumber: null,
      stolenJurisdiction: null,
      stolenPoliceOfficerName: null,
      eventDescription: 'I left my APP on the table and when I came back it was gone',
    },
    paidThroughShopify: false,
    shopifyConfirmationNumber: null,
    shopifyPaymentStatus: null,
    shopifyOrderNumber: null,
  },
  {
    // New application, temporary
    type: 'NEW',
    id: 4,
    applicantId: null,
    firstName: 'Applicant',
    middleName: null,
    lastName: 'Five',
    phone: '4567891234',
    email: 'applicantthree@gmail.com',
    receiveEmailUpdates: true,
    addressLine1: '789 Vancouver Rd.',
    addressLine2: null,
    city: 'Vancouver',
    postalCode: 'B1C2D3',
    permitType: 'TEMPORARY',
    paymentMethod: 'MASTERCARD',
    processingFee: new Prisma.Decimal(26),
    donationAmount: new Prisma.Decimal(0),
    shippingAddressSameAsHomeAddress: true,
    shippingFullName: null,
    shippingAddressLine1: null,
    shippingAddressLine2: null,
    shippingCity: null,
    shippingProvince: null,
    shippingCountry: null,
    shippingPostalCode: null,
    billingAddressSameAsHomeAddress: false,
    billingFullName: "Applicant Four's Dad",
    billingAddressLine1: '456 Surrey St.',
    billingAddressLine2: 'DC',
    billingCity: 'Vancouver',
    billingProvince: 'BC',
    billingCountry: 'Canada',
    billingPostalCode: 'J3K1L5',
    newApplication: {
      dateOfBirth: new Date('2002-10-31'),
      gender: 'MALE',
      disability: 'Requires walker',
      disabilityCertificationDate: new Date('2002-11-12'),
      patientCondition: 'OTHER',
      mobilityAids: ['MANUAL_CHAIR'],
      otherPatientCondition: 'Has trouble walking',
      physicianFirstName: 'Doctor',
      physicianLastName: 'Physician2',
      physicianMspNumber: '67890',
      physicianAddressLine1: '789 Alberta Rd.',
      physicianAddressLine2: null,
      physicianCity: 'Calgary',
      physicianPostalCode: 'H4K3S0',
      physicianPhone: '8264029163',
      guardianFirstName: null,
      guardianMiddleName: null,
      guardianLastName: null,
      guardianAddressLine1: null,
      guardianAddressLine2: null,
      guardianCity: null,
      guardianPostalCode: null,
      guardianPhone: null,
      guardianRelationship: null,
      usesAccessibleConvertedVan: false,
      accessibleConvertedVanLoadingMethod: null,
      requiresWiderParkingSpace: true,
      requiresWiderParkingSpaceReason: 'OTHER',
      otherRequiresWiderParkingSpaceReason: 'Car is very wide',
      temporaryPermitExpiry: new Date('2022-06-01'),
    },
    renewalApplication: undefined,
    replacementApplication: undefined,
    paidThroughShopify: false,
    shopifyConfirmationNumber: null,
    shopifyPaymentStatus: null,
    shopifyOrderNumber: null,
  },
  {
    // Renewal application, paid through shopify
    type: 'RENEWAL',
    id: 5,
    applicantId: 4,
    firstName: 'Applicant',
    middleName: null,
    lastName: 'Four',
    phone: '0987654321',
    email: 'applicantfour@gmail.com',
    receiveEmailUpdates: false,
    addressLine1: '421 Surrey St.',
    addressLine2: '264C',
    city: 'Surrey',
    postalCode: 'A1B2C3',
    permitType: 'PERMANENT',
    paymentMethod: 'SHOPIFY',
    processingFee: new Prisma.Decimal(26),
    donationAmount: new Prisma.Decimal(20),
    shippingAddressSameAsHomeAddress: true,
    shippingFullName: null,
    shippingAddressLine1: null,
    shippingAddressLine2: null,
    shippingCity: null,
    shippingProvince: null,
    shippingCountry: null,
    shippingPostalCode: null,
    billingAddressSameAsHomeAddress: true,
    billingFullName: null,
    billingAddressLine1: null,
    billingAddressLine2: null,
    billingCity: null,
    billingProvince: null,
    billingCountry: null,
    billingPostalCode: null,
    newApplication: undefined,
    renewalApplication: {
      physicianFirstName: 'Doctor',
      physicianLastName: 'Four',
      physicianMspNumber: '12344',
      physicianAddressLine1: '164 University Ave.',
      physicianAddressLine2: null,
      physicianCity: 'Burnaby',
      physicianPostalCode: 'N1M2K3',
      physicianPhone: '234-567-8904',
      usesAccessibleConvertedVan: true,
      accessibleConvertedVanLoadingMethod: 'END_LOADING',
      requiresWiderParkingSpace: false,
      requiresWiderParkingSpaceReason: null,
      otherRequiresWiderParkingSpaceReason: null,
    },
    replacementApplication: undefined,
    paidThroughShopify: true,
    shopifyPaymentStatus: 'RECEIVED',
    shopifyConfirmationNumber: '4671298961430',
    shopifyOrderNumber: '1085',
  },
];

/**
 * Upsert applications
 * @param data Custom application data to be upserted
 */
export default async function applicationUpsert(data?: UpsertApplication[]): Promise<void> {
  for (const application of data || applications) {
    const { id, type, ...rest } = application;
    let applicationUpsert;
    if (type === 'NEW') {
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      const { applicantId, newApplication, ...data } = rest;
      applicationUpsert = await prisma.application.upsert({
        where: { id },
        create: {
          type,
          ...data,
          newApplication: {
            create: newApplication,
          },
          applicationProcessing: { create: {} },
        },
        update: {
          type,
          ...data,
          newApplication: {
            update: newApplication,
          },
          renewalApplication: undefined,
          replacementApplication: undefined,
        },
      });
    } else if (type === 'RENEWAL') {
      const { applicantId, renewalApplication, ...data } = rest;
      applicationUpsert = await prisma.application.upsert({
        where: { id },
        create: {
          type,
          ...data,
          applicant: { connect: { id: applicantId as number } },
          renewalApplication: {
            create: renewalApplication,
          },
          applicationProcessing: { create: {} },
        },
        update: {
          type,
          ...data,
          newApplication: undefined,
          renewalApplication: { update: renewalApplication },
          replacementApplication: undefined,
        },
      });
    } else {
      const { applicantId, replacementApplication, ...data } = rest;
      applicationUpsert = await prisma.application.upsert({
        where: { id },
        create: {
          type,
          ...data,
          applicant: { connect: { id: applicantId as number } },
          newApplication: undefined,
          renewalApplication: undefined,
          replacementApplication: { create: replacementApplication },
          applicationProcessing: { create: {} },
        },
        update: {
          type,
          ...data,
          applicant: { connect: { id: applicantId as number } },
          newApplication: undefined,
          renewalApplication: undefined,
          replacementApplication: {
            update: replacementApplication,
          },
        },
      });
    }

    console.log({ applicationUpsert });
  }
}
