generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Applicant {
  id                   Int                @id @default(autoincrement())
  firstName            String             @map("first_name") @db.VarChar(255)
  middleName           String?            @map("middle_name") @db.VarChar(255)
  lastName             String             @map("last_name") @db.VarChar(255)
  dateOfBirth          DateTime           @map("date_of_birth") @db.Date
  gender               Gender
  customGender         String?            @map("custom_gender") @db.VarChar(255)
  email                String?            @unique @db.VarChar(255)
  phone                String             @db.VarChar(50)
  province             Province
  city                 String             @db.VarChar(255)
  addressLine1         String             @map("address_line_1") @db.VarChar(255)
  addressLine2         String?            @map("address_line_2") @db.VarChar(255)
  postalCode           String             @map("postal_code") @db.Char(6)
  rcdUserId            Int?               @unique @map("rcd_user_id")
  status               ApplicantStatus?
  acceptedTos          DateTime?          @db.Timestamptz(6) @map("accepted_tos")
  guardianId           Int                @unique @map("guardian_id")
  medicalInformationId Int                @unique @map("medical_information_id")
  createdAt            DateTime           @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt            DateTime           @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  guardian             Guardian           @relation("applicantsToguardians", fields: [guardianId], references: [id])
  medicalInformation   MedicalInformation @relation("applicantsTomedical_information", fields: [medicalInformationId], references: [id])
  applications         Application[]
  permits              Permit[]

  @@map("applicants")
}

model Application {
  id                                    Int                   @id @default(autoincrement())
  firstName                             String                @map("first_name") @db.VarChar(255)
  middleName                            String?               @map("middle_name") @db.VarChar(255)
  lastName                              String                @map("last_name") @db.VarChar(255)
  dateOfBirth                           DateTime              @map("date_of_birth") @db.Date
  gender                                Gender
  customGender                          String?               @map("custom_gender") @db.VarChar(255)
  email                                 String?               @db.VarChar(255)
  phone                                 String                @db.VarChar(50)
  province                              Province
  city                                  String                @db.VarChar(255)
  addressLine1                          String                @map("address_line_1") @db.VarChar(255)
  addressLine2                          String?               @map("address_line_2") @db.VarChar(255)
  postalCode                            String                @map("postal_code") @db.Char(6)
  notes                                 String?
  rcdUserId                             Int?                  @map("rcd_user_id")
  isRenewal                             Boolean               @default(true) @map("is_renewal")
  permitType                            PermitType            @default(PERMANENT) @map("permit_type")
  poaFormUrl                            String?               @map("poa_form_url") @db.VarChar(255)
  applicantId                           Int?                  @map("applicant_id")
  disability                            String                @db.VarChar(255)
  affectsMobility                       Boolean               @default(false) @map("affects_mobility")
  mobilityAidRequired                   Boolean               @default(false) @map("mobility_aid_required")
  cannotWalk100m                        Boolean               @default(false) @map("cannot_walk_100m")
  aid                                   Aid[]
  physicianName                         String                @map("physician_name") @db.VarChar(255)
  physicianMspNumber                    Int                   @map("physician_msp_number")
  physicianAddressLine1                 String                @map("physician_address_line_1") @db.VarChar(255)
  physicianAddressLine2                 String?               @map("physician_address_line_2") @db.VarChar(255)
  physicianCity                         String                @map("physician_city") @db.VarChar(255)
  physicianProvince                     Province              @map("physician_province")
  physicianPostalCode                   String                @map("physician_postal_code") @db.Char(6)
  physicianPhone                        String                @map("physician_phone") @db.VarChar(50)
  physicianNotes                        String?               @map("physician_notes")
  processingFee                         Float                 @map("processing_fee")
  donationAmount                        Float?                @map("donation_amount")
  paymentMethod                         PaymentType           @map("payment_method")
  shopifyConfirmationNumber             String                @unique @map("shopify_confirmation_number") @db.VarChar(255)
  guardianFirstName                     String?               @map("guardian_first_name") @db.VarChar(255)
  guardianMiddleName                    String?               @map("guardian_middle_name") @db.VarChar(255)
  guardianLastName                      String?               @map("guardian_last_name") @db.VarChar(255)
  guardianPhone                         String?               @map("guardian_phone") @db.VarChar(50)
  guardianProvince                      Province?             @map("guardian_province")
  guardianCity                          String?               @map("guardian_city") @db.VarChar(255)
  guardianAddressLine1                  String?               @map("guardian_address_line_1") @db.VarChar(255)
  guardianAddressLine2                  String?               @map("guardian_address_line_2") @db.VarChar(255)
  guardianPostalCode                    String?               @map("guardian_postal_code") @db.Char(6)
  guardianRelationship                  String?               @map("guardian_relationship") @db.VarChar(50)
  guardianNotes                         String?               @map("guardian_notes")
  shippingFullName                      String?               @db.VarChar(255) @map("shipping_full_name")
  shippingAddressLine1                  String?               @map("shipping_address_line_1") @db.VarChar(255)
  shippingAddressLine2                  String?               @map("shipping_address_line_2") @db.VarChar(255)
  shippingCity                          String?               @map("shipping_city") @db.VarChar(255)
  shippingProvince                      Province?             @map("shipping_province")
  shippingPostalCode                    String?               @map("shipping_postal_code") @db.Char(6)
  shippingAddressSameAsHomeAddress      Boolean               @default(false) @map("shipping_address_same_as_home_address")
  billingAddressSameAsHomeAddress       Boolean               @default(false) @map("billing_address_same_as_home_address")
  billingFullName                       String?               @db.VarChar(255) @map("billing_full_name")
  billingAddressLine1                   String?               @map("billing_address_line_1") @db.VarChar(255)
  billingAddressLine2                   String?               @map("billing_address_line_2") @db.VarChar(255)
  billingCity                           String?               @map("billing_city") @db.VarChar(255)
  billingProvince                       Province?             @map("billing_province")
  billingPostalCode                     String?               @map("billing_postal_code") @db.Char(6)
  applicationProcessingId               Int                   @unique @map("application_processing_id")
  createdAt                             DateTime              @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt                             DateTime              @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  applicant                             Applicant?            @relation(fields: [applicantId], references: [id])
  applicationProcessing                 ApplicationProcessing @relation("application_processingToapplications", fields: [applicationProcessingId], references: [id])
  permits                               Permit?
  replacement                           Replacement?          @relation("applicationsToreplacements")

  @@map("applications")
}

model Employee {
  id            Int       @id @default(autoincrement())
  firstName     String    @map("first_name") @db.VarChar(255)
  lastName      String    @map("last_name") @db.VarChar(255)
  email         String    @unique @db.VarChar(255)
  emailVerified DateTime? @map("email_verified") @db.Timestamptz(6)
  role          Role
  createdAt     DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)

  @@map("employees")
}

model Guardian {
  id           Int        @id @default(autoincrement())
  firstName    String     @map("first_name") @db.VarChar(255)
  middleName   String?    @map("middle_name") @db.VarChar(255)
  lastName     String     @map("last_name") @db.VarChar(255)
  addressLine1 String     @map("address_line_1") @db.VarChar(255)
  addressLine2 String?    @map("address_line_2") @db.VarChar(255)
  city         String     @db.VarChar(255)
  province     Province
  postalCode   String     @map("postal_code") @db.Char(6)
  phone        String     @db.VarChar(50)
  relationship String     @db.VarChar(255)
  notes        String?
  createdAt    DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime   @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  applicant    Applicant? @relation("applicantsToguardians")

  @@map("guardians")
}

model MedicalInformation {
  id                  Int        @id @default(autoincrement())
  disability          String     @db.VarChar(255)
  affectsMobility     Boolean    @default(false) @map("affects_mobility")
  mobilityAidRequired Boolean    @default(false) @map("mobility_aid_required")
  cannotWalk100m      Boolean    @default(false) @map("cannot_walk_100m")
  notes               String?
  certificationDate   DateTime?  @map("certification_date") @db.Date
  aid                 Aid[]
  physicianId         Int        @map("physician_id")
  createdAt           DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt           DateTime   @default(now()) @map("updated_at") @db.Timestamptz(6)
  physician           Physician  @relation(fields: [physicianId], references: [id])
  applicant           Applicant? @relation("applicantsTomedical_information")

  @@map("medical_information")
}

model Permit {
  id            Int         @id @default(autoincrement())
  rcdPermitId   Int         @unique @map("rcd_permit_id")
  expiryDate    DateTime    @map("expiry_date") @db.Date
  receiptId     Int?        @map("receipt_id")
  active        Boolean     @default(true)
  applicationId Int         @unique @map("application_id")
  applicantId   Int         @map("applicant_id")
  createdAt     DateTime    @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime    @default(now()) @map("updated_at") @db.Timestamptz(6)
  applicant     Applicant   @relation(fields: [applicantId], references: [id])
  application   Application @relation(fields: [applicationId], references: [id])

  @@map("permits")
}

model Physician {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  mspNumber          Int                  @unique @map("msp_number")
  addressLine1       String               @map("address_line_1") @db.VarChar(255)
  addressLine2       String?              @map("address_line_2") @db.VarChar(255)
  city               String               @db.VarChar(255)
  province           Province             @default(BC)
  postalCode         String               @map("postal_code") @db.Char(6)
  phone              String               @db.VarChar(50)
  status             PhysicianStatus      @default(ACTIVE)
  notes              String?
  createdAt          DateTime             @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt          DateTime             @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  medicalInformation MedicalInformation[]

  @@map("physicians")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String   @db.VarChar(255)
  token      String   @unique @db.VarChar(255)
  expires    DateTime @db.Timestamptz(6)
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @default(now()) @map("updated_at") @db.Timestamptz(6)

  @@map("verification_requests")
}

model ApplicationProcessing {
  id                Int               @id @default(autoincrement())
  status            ApplicationStatus @default(PENDING)
  appNumber         Int?              @unique @map("app_number")
  appHolepunched    Boolean           @default(false) @map("app_holepunched")
  walletCardCreated Boolean           @default(false) @map("wallet_card_created")
  invoiceNumber     Int?              @unique @map("invoice_number")
  documentUrls      String[]          @map("document_urls") @db.VarChar(255)
  appMailed         Boolean           @default(false) @map("app_mailed")
  createdAt         DateTime          @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime          @default(now()) @map("updated_at") @db.Timestamptz(6)
  application      Application?       @relation("application_processingToapplications")

  @@map("application_processing")
}

model Replacement {
  id                      Int                  @id @default(autoincrement())
  reason                  ReasonForReplacement
  lostTimestamp           DateTime?            @map("lost_timestamp") @db.Timestamptz(6)
  lostLocation            String?              @map("lost_location") @db.VarChar(255)
  stolenPoliceFileNumber  Int?                 @map("stolen_police_file_number")
  stolenJurisdiction      String?              @map("stolen_jurisdiction") @db.VarChar(255)
  stolenPoliceOfficerName String?              @map("stolen_police_officer_name") @db.VarChar(255)
  description             String?
  applicationId           Int                  @unique @map("application_id")
  createdAt               DateTime             @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt               DateTime             @default(now()) @map("updated_at") @db.Timestamptz(6)
  application             Application          @relation("applicationsToreplacements", fields: [applicationId], references: [id])

  @@map("replacements")
}

enum Aid {
  CANE
  ELECTRIC_CHAIR
  MANUAL_CHAIR
  SCOOTER
  WALKER

   @@map("aid")
}

enum ApplicantStatus {
  ACTIVE
  INACTIVE

   @@map("applicantstatus")
}

enum Gender {
  MALE
  FEMALE
  OTHER

   @@map("gender")
}

enum PaymentType {
  MASTERCARD
  VISA
  ETRANSFER
  CASH
  CHEQUE
  DEBIT
  MONEY_ORDER

   @@map("paymenttype")
}

enum PhysicianStatus {
  ACTIVE
  INACTIVE

   @@map("physicianstatus")
}

enum Province {
  BC
  AB
  SK
  MB
  ON
  QC
  NS
  PE
  NL
  NB
  NU
  NT
  YT

   @@map("province")
}

enum Role {
  ADMIN
  ACCOUNTING
  SECRETARY

   @@map("role")
}

enum ApplicationStatus {
  PENDING
  INPROGRESS
  APPROVED
  REJECTED
  COMPLETED
  EXPIRING
  EXPIRED
  ACTIVE

   @@map("applicationstatus")
}

enum ReasonForReplacement {
  LOST
  STOLEN
  OTHER

   @@map("reasonforreplacement")
}

enum PermitType {
  PERMANENT
  TEMPORARY

  @@map("permittype")
}
